#!/usr/bin/env php
<?php
	
# Takes a command line argument, either php_NAME.txt, phc_NAME, NAME, or
# NAME.txt, and finds 2 files of the form php_NAME.txt and phc_NAME.txt. Each
# of the files will contain single two columns, the name of the test and the
# times. It will then calculate the speedup, and plot them on a single graph,
# NAME.plot.

	# return a hashtable of test_name => time
	function parse ($filename)
	{
		// format is "name     time"
		$results_strings = split ("\n", chop (file_get_contents ($filename)));
		foreach ($results_strings as $res)
		{
			list ($name, $time) = split ("[ ]+", $res);
			$results [$name] = $time;
		}
		return $results;
	}


	$title = $argv[1];
	$dirname = dirname ($title);

	# remove the dirname
	$title = basename ($title);

	# strip the prefix
	$title = preg_replace ("/^ph[cp]_/", "", $title);

	# strip the suffix
	$title = preg_replace ("/.txt$/", "", $title);

	# fetch both sets of data
	$php_results = parse ("$dirname/php_$title.txt");
	$phc_results = parse ("$dirname/phc_$title.txt");

	# work out the speedups
	foreach ($php_results as $name => $php_time)
	{
		$phc_time = $phc_results[$name];
		if ($php_time > $phc_time) # php is slower
			$speedups[$name] = ($php_time / $phc_time) - 1;
		else
			$speedups[$name] = (($phc_time / $php_time) - 1) * -1;
	}

	# add an average
	$total = array_sum (array_values ($speedups));
	$speedups["average"] = $total / count ($speedups);



	# Make the gnuplot file, we create the entire file in a single file.
	# Data is in a single column, with the names in an xtics
	# command. We plot from a zero centered bar graph.


	# find the range
	$maxxrange = count ($speedups) - 0.5;

	# add labels
	$labels = "";
	foreach (array_keys ($speedups) as $i => $name)
	{
		if ($speedups[$name] < 0)
			$labels .= "set label \"$name\" at $i,0.2 rotate left\n";
		else
			$labels .= "set label \"$name\" at $i,-0.2 rotate right\n";
	}

	# format the data
	foreach (array_values ($speedups) as $i => $float)
		$data .= "$i $float\n";

	# create the y tics (3x 2x 1x 2x 3x etc)
	$minyrange = array_reduce (
						array_values ($speedups), 
						create_function ('$x, $y', 'return min ((float)($x), (float)($y));'));
	$intminyrange = (int)($minyrange) - 1;

	$maxyrange = array_reduce (
						array_values ($speedups), 
						create_function ('$x, $y', 'return max ((float)($x), (float)($y));'));
	$intmaxyrange = (int)($maxyrange) + 1;

	$ytics = " (";
	for ($i = $intminyrange; $i < 0; $i++)
	{
		$times = -$i + 1;
		$ytics .= "\"{$times}x\" $i, ";
	}

	$ytics .= "\"\" 0, ";

	for (++$i; $i <= $intmaxyrange; $i++)
	{
		$times = $i + 1;
		$ytics .= "\"{$times}x\" $i, ";
	}
	$ytics .= "\"\" $i)";


	// create a bit more space 
	$minyrange *= 1.05;
	$maxyrange *= 1.05;
		

	$string = <<<GNUPLOT
set term postscript eps enhanced
set output "results/times_10.eps"
set nokey
$labels
set yrange [$minyrange:$maxyrange]
set noxtics
set ytics $ytics rotate
set y2tics $ytics rotate
set y2tics out
set ytics out
set label "PHP faster" at $maxxrange+0.5,-0.2 rotate right
set label "PHP faster" at           -1.0,-0.2 rotate right
set label "phc faster" at $maxxrange+0.5, 0.2 rotate left
set label "phc faster" at           -1.0, 0.2 rotate left
set xzeroaxis 1
plot "-" using 1:2:(0.7)       with boxes fs solid 0.25
$data
end

GNUPLOT;

	
	file_put_contents ("results/$title.plot", $string);
	`gnuplot results/$title.plot`;





?>
